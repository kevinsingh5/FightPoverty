<!DOCTYPE html>
<meta charset="utf-8">
<style>

.arc text {
	font: 10px sans-serif;
	text-anchor: middle;
}

.arc path {
	stroke: #fff;
}

.tooltip {
        background: #eee;
        box-shadow: 0 0 5px #999999;
        color: #333;
        display: none;
        font-size: 12px;
        left: 130px;
        padding: 10px;
        position: absolute;
        text-align: center;
        top: 95px;
        width: 80px;
        z-index: 10;
}

</style>
<div id="chart"></div>
<svg width="440" height="440"></svg>
<script src="https://d3js.org/d3.v4.min.js"></script>
<script>

	function drawPieChart(partyCount) {
		let color = d3.scaleOrdinal(['#FF0000','#0000FF','#C0C0C0']);
		let partyNumbers = [];
		let partyLabels = [];
		let total = 0;
		for(let key in partyCount) {
			partyNumbers.push(partyCount[key]);
			partyLabels.push(key);
			total += partyCount[key];
			}
		//console.log(partyNumbers);

		let svg = d3.selectAll("svg"),
       	width = 300,
   		height = 300
        radius = Math.min(width, height) / 2,
        g = svg.append("g").attr("transform", "translate(" + (width / 2 + 40) + "," + (height / 2 + 40) + ")");

        let pie = d3.pie();

    	let arc = d3.arc()
                	.innerRadius(0)
                	.outerRadius(radius);

        let bigArc = d3.arc()
        			.innerRadius(0)
        			.outerRadius(radius + 20);

    	let arcs = g.selectAll("arc")
                	.data(pie(partyNumbers))
                	.enter()
                	.append("g")
                	.attr("class", "arc");

        let tooltip = d3.select("#chart")
        	.append("div")
        	.attr("class", "tooltip");

        tooltip.append("div")
        	.attr("class", "count");

        tooltip.append("div")
        	.attr("class", "percentage");

    	arcs.append("path")
        	.attr("fill", function(d, i) {
            	return color(i);
        	})
        	.attr("d", arc)
        	.on("mouseover", function(d) {
        		d3.select(this).transition()
        			.duration(500)
        			.attr("d", bigArc);
        		tooltip.select(".count").html(partyLabels[d.index] + ": " + d.data);
        		tooltip.select(".percentage").html(Math.round(10000 * d.data / total) / 100 + "%");
        		tooltip.style('display', 'block');
        	})
        	.on("mouseout", function(d) {
        		d3.select(this).transition()
        			.duration(500)
        			.attr("d", arc);
        		tooltip.style("display", "none");
        	})
        	.on("mousemove", function(d) {
        		tooltip.style("top", (d3.event.pageY + 10) + "px")
        			.style("left", (d3.event.pageX + 10) + "px");
        	});
	}

	function updatePartyCount(partyCount, pgNum) {
		d3.json("http://api.propxdoeswhat.me/api/politicians?page=" + pgNum + "&results_per_page=100", function(data) {
			pgNum = data["page"];
			let maxPgNum = data["total_pages"];
			let politicianList = data["objects"];
			for(let politician of politicianList) {
				let party = politician["party"];
				if(partyCount[party] == undefined) {
					partyCount[party] = 1;
				} else {
					partyCount[party] += 1;
				}
			}
			console.log("Page " + pgNum);
			console.log(partyCount);
			if(pgNum == maxPgNum) {
				// Done adding up numbers, draw stuff
				drawPieChart(partyCount);
			} else {
				drawPieChart(partyCount);
				updatePartyCount(partyCount, pgNum + 1);
			}
			return;
		});
	}

    updatePartyCount({}, 1);

</script>
